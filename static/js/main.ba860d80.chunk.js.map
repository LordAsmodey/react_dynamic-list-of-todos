{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","types/TodosFilter.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","props","todos","showInfo","id","className","map","todo","completed","cn","title","type","onClick","TodoFilter","React","memo","filteredBy","setFilteredBy","searchQuery","setSearchQuery","onSubmit","event","preventDefault","value","onChange","target","placeholder","style","pointerEvents","length","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodosFilter","TodoModal","hideInfo","useState","user","setUser","useEffect","userId","userFromServer","href","email","name","App","setTodos","setTodo","DEFAULT","todosFromServer","preparedTodos","filter","task","ACTIVE","COMPLETED","includes","todoInfo","find","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ba860d80.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todos: Todo[];\n  showInfo: (id: number) => void\n  id: number | undefined\n}\n\nexport const TodoList: React.FC<Props> = (props) => {\n  const { todos, showInfo, id } = props;\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className=\"\"\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            {todo.completed ? (\n              <td className=\"is-vcentered\">\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              </td>\n            ) : (\n              <td className=\"is-vcentered\" />\n            )}\n\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={cn({\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                })}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => showInfo(todo.id)}\n              >\n                <span className=\"icon\">\n                  {todo.id === id ? (\n                    <i className=\"far fa-eye-slash\" />\n                  ) : (\n                    <i className=\"far fa-eye\" />\n                  )}\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { TodosFilter } from '../../types/TodosFilter';\n\ninterface Props {\n  filteredBy: TodosFilter,\n  setFilteredBy: CallableFunction,\n  searchQuery: string,\n  setSearchQuery: CallableFunction,\n}\n\nexport const TodoFilter: React.FC<Props> = React.memo((props) => {\n  const {\n    filteredBy,\n    setFilteredBy,\n    searchQuery,\n    setSearchQuery,\n  } = props;\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(event) => event.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filteredBy}\n            onChange={(event) => {\n              setFilteredBy(event.target.value);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={searchQuery}\n          onChange={(event) => setSearchQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {searchQuery.length > 0 && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setSearchQuery('')}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n});\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(1000)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum TodosFilter {\n  DEFAULT = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n}\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\n\ninterface Props {\n  todo: Todo | null,\n  hideInfo: CallableFunction,\n}\n\nexport const TodoModal: React.FC<Props> = (props) => {\n  const { todo, hideInfo } = props;\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (todo !== null) {\n      getUser(todo.userId).then(userFromServer => setUser(userFromServer));\n    }\n  }, []);\n\n  return (\n    <div\n      className=\"modal is-active\"\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                hideInfo();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './index.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\nimport { TodosFilter } from './types/TodosFilter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todo, setTodo] = useState<Todo | null>(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [filteredBy, setFilteredBy]\n    = useState<TodosFilter>(TodosFilter.DEFAULT);\n\n  const showInfo = (id: number) => {\n    const todoInfo = todos.find(item => item.id === id) || todos[0];\n\n    setTodo(todoInfo);\n  };\n\n  const hideInfo = () => {\n    setTodo(null);\n  };\n\n  useEffect(() => {\n    getTodos()\n      .then((todosFromServer) => setTodos(todosFromServer));\n  }, []);\n\n  const prepareTasks = () => {\n    return todos\n      .filter(task => {\n        if (filteredBy === TodosFilter.ACTIVE) {\n          return !task.completed;\n        }\n\n        if (filteredBy === TodosFilter.COMPLETED) {\n          return task.completed;\n        }\n\n        return task;\n      })\n      .filter(task => {\n        return task.title.includes(searchQuery);\n      });\n  };\n\n  const preparedTodos = prepareTasks();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filteredBy={filteredBy}\n                setFilteredBy={setFilteredBy}\n                searchQuery={searchQuery}\n                setSearchQuery={setSearchQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0\n                ? <Loader />\n                : (\n                  <TodoList\n                    showInfo={showInfo}\n                    todos={preparedTodos}\n                    id={todo?.id}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n      {todo && (\n        <TodoModal\n          todo={todo}\n          hideInfo={hideInfo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}